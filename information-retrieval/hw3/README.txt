===============================================================================
Найти все пары дубликатов HTML-документов алгоритмом Бродера (см. лекцию #5)
Реализовать на языке Python 2.7

Значения для алгоритма:
* окно для шинглов: 5
* кол-во minhashes: 20
* порог сравнения:  75%

Для считывания документов используйте docreader.py (его main - это демонстрация)
Используйте аттрибут .text, это уже разобраный HTML

===============================================================================
Задания присылать в виде package.tgz на ir-ts@ml.corp.mail.ru
Subject: [Ir-ts] [near_dups] ДЗ-2, Иван Иванов BD-21

Что должно быть в архиве:
./preinstall.sh (опционально) - если вам нужно доставить какие-то модули
./run.sh - исполняемый скрипт

Что есть в окружении:
- Ubuntu 14.04LTS (x86_64)
- python 2.7
- google protobuf


===============================================================================
Как будет происходить проверка:
===============================================================================
1. пускается ./preinstall.sh
2. пускается ./run.sh file1.gz file2.gz ... >result.txt (ограничение по RAM: 2Gb, CPU: см. далее)
3. result.txt должен быть формата:
url1 url2 90
url1 url88 87
...

пары URL-ов проверяются на идентичность методом шинглов
если существенная доля не совпадает - незачет.

сверяется кол-во пар с выдачей опорной реализации.
если существенное отклонение - незачет.

===============================================================================
Все эти действия последовательно происходят по 3м наборам URL-ов
===============================================================================

Набор 1:
20k документов
Ограничение по CPU: 10 минут
Оценка при успешном прохождении: 5

Набор 2: (скрытый)
50k документов
Ограничение по CPU: 15 минут
Оценка при успешном прохождении: 10

Набор 3: (скрытый)
100k документов
Ограничение по CPU: 15 минут
Оценка при успешном прохождении: 15


===============================================================================
FAQ
===============================================================================
Q: Какова производительности машины на которой будет проходить тест?
A: 232319 pystones

Q: данные архивы - отдельно или вместе?
A: Вместе. Архивы разделены исключительно для удобства отладки.
